name: Create Release on Tag

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: "v${{ matrix.build_env.tag }} - ${{ matrix.build_env.pkgarch }} :: ${{ matrix.build_env.target }}/${{ matrix.build_env.subtarget }} build"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_env:
          - tag: "23.05.5"
            pkgarch: mipsel_24kc
            target: ramips
            subtarget: mt76x8
            vermagic: "e26d7d4da75f7d7588721354d3b6e4d9"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: openwrt/openwrt
          ref: v${{ matrix.build_env.tag }}
          fetch-depth: 0

      - name: Install Dependencies
        run: |
         sudo apt update && sudo apt install -y \
         build-essential libncurses5-dev libncursesw5-dev \
         gawk flex bison zlib1g-dev wget unzip file python3 \
         libpam0g-dev liblzma-dev libsnmp-dev



      - name: Clean Build Directory
        run: |
          make clean
          rm -rf build_dir staging_dir tmp

      - name: Cache Tools and Kernel
        id: cache-tools-kernel
        uses: actions/cache@v4
        env:
          cache-name: "cache-${{ matrix.build_env.tag }}-${{ matrix.build_env.pkgarch}}-${{ github.run_id }}"
        with:
          path: "**"
          key: ${{ runner.os }}-build-${{ env.cache-name }}

      - name: Update Feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Configure Build
        run: |
         export TERM=xterm
         make defconfig

      - name: Building Kernel and Tools
        run: |
          echo "Building for: ${{ matrix.build_env.pkgarch}}, target: ${{ matrix.build_env.target}}, subtarget: ${{ matrix.build_env.subtarget}}"

          wget https://downloads.openwrt.org/releases/${{ matrix.build_env.tag }}/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/feeds.buildinfo -O feeds.conf
          echo "src-git awgopenwrt https://github.com/yury-sannikov/awg-openwrt.git" >> ./feeds.conf
          ./scripts/feeds update && ./scripts/feeds install -a

          wget https://downloads.openwrt.org/releases/${{ matrix.build_env.tag }}/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/config.buildinfo -O .config
          echo "CONFIG_PACKAGE_kmod-amneziawg=m" >> .config
          echo "CONFIG_PACKAGE_amneziawg-tools=y" >> .config
          echo "CONFIG_PACKAGE_luci-app-amneziawg=y" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20poly1305=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-chacha20poly1305=m" >> .config

          make defconfig

          echo "    > make tools/install"
          make tools/install -j$(nproc)

          echo "    > make toolchain/install"
          make toolchain/install -j$(nproc)

      - name: Rebuild Kernel
        run: |
          make target/linux/{clean,compile} -j$(nproc) V=s

          VERMAGIC=$(cat ./build_dir/target-*/linux-*/linux-*/.vermagic 2>/dev/null || echo "MISSING")
          VERMAGIC_EXPECTED=${{ matrix.build_env.vermagic }}

          if [ "$VERMAGIC" = "MISSING" ]; then
            echo "Error: .vermagic file not found!"
            exit 1
          fi

          if [ "$VERMAGIC" != "$VERMAGIC_EXPECTED" ]; then
            echo "Vermagic mismatch: $VERMAGIC, expected $VERMAGIC_EXPECTED"
            exit 1
          fi

      - name: Build AmneziaWG
        run: |
          make package/kmod-amneziawg/{clean,download,prepare,compile} V=s || true
          make package/luci-app-amneziawg/{clean,download,prepare,compile} V=s
          make package/amneziawg-tools/{clean,download,prepare,compile} V=s

      - name: Prepare artifacts
        run: |
          tag_name=${{ github.ref_name }}
          mkdir -p awgrelease
          postfix="${tag_name}_v${{ matrix.build_env.tag }}_${{ matrix.build_env.pkgarch}}_${{ matrix.build_env.target}}_${{ matrix.build_env.subtarget}}"
          cp bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/amneziawg-tools_*.ipk awgrelease/amneziawg-tools_${postfix}.ipk
          cp bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/luci-app-amneziawg_*.ipk awgrelease/luci-app-amneziawg_${postfix}.ipk
          cp bin/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/packages/kmod-amneziawg_*.ipk awgrelease/kmod-amneziawg_${postfix}.ipk

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: awgrelease/*.ipk
